name: PR Status Checks
on: [pull_request]

permissions:
  contents: read
  deployments: write

jobs:
  prep:
    name: Prep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Read .nvmrc
        id: nvm
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js version from .nvmrc
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: ${{ env.NVMRC }}
          check-latest: true

      - name: Print Node.js Version
        run: node -v

      - name: Install dependencies
        run: npm install

      - name: Cache node_modules & package-lock.json
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            node_modules
            package-lock.json
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  build:
    name: Build
    needs: [prep]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch node_modules & package-lock.json
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            node_modules
            package-lock.json
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build entire Application
        run: npm run build

  formatting:
    name: Formatting
    needs: [prep, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch node_modules & package-lock.json
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            node_modules
            package-lock.json
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run Formatting on entire Repo
        run: |
          npm run format:check

  linting:
    name: Linting
    needs: [prep, build, formatting]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch node_modules & package-lock.json
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            node_modules
            package-lock.json
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run Linting on entire Repo
        run: |
          npm run lint
